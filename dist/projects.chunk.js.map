{"version":3,"sources":["webpack:///./app/modules/projects/index.js","webpack:///./app/modules/projects/containers/Projects.js","webpack:///./app/modules/projects/components/Projects.js","webpack:///./app/modules/projects/reducers/projects.reducer.js"],"names":["Component","reducer","mapStateToProps","home","Projects","props","sampleData","projectReducer","state","action","type"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,kDAAN;AACA,IAAMC,8CAAN,C;;;;;;;;;;;;;;ACJP;;AACA;;;;;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,SAAa,EAACA,UAAD,EAAb;AAAA,CAAxB;;kBAEe,yBAAQD,eAAR,qB;;;;;;;;;;;;;;;;ACLf;;;;;;;;;;;;IAEqBE,Q;;;;;;;;;;;6BACV;AACP;AACA;AAFO,wBAGa,KAAKC,KAHlB,CAGAF,IAHA;AAAA,UAGAA,IAHA,+BAGO,EAHP;;;AAKP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAA4D;AAAA;AAAA;AAAA;AAAA,WAA5D;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEGA,eAAKG,UAAL,GACC;AAAA;AAAA;AAAA;AAAuC;AAAA;AAAA;AAAIH,mBAAKG;AAAT;AAAvC,WADD,GAEC;AAAA;AAAA;AAAA;AAAA,WAJJ;AAME;AAAA;AAAA;AAAG;AAAA;AAAA;AAAA;AAAA;AAAH;AANF;AAHF,OADF;AAcD;;;;;;kBApBkBF,Q;;;;;;;;;;;;;kBCFGG,c;AAAT,SAASA,cAAT,GAA2C;AAAA,MAAnBC,KAAmB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACxD,UAAQA,OAAOC,IAAf;AAGA,SAAOF,KAAP;AACD,C","file":"projects.chunk.js","sourcesContent":["import Projects from './containers/Projects';\nimport projects from './reducers/projects.reducer';\n\nexport const Component = Projects;\nexport const reducer = projects;\n\n\n// WEBPACK FOOTER //\n// ./app/modules/projects/index.js","import {connect} from 'react-redux';\nimport Projects from '../components/Projects';\n\nconst mapStateToProps = ({home}) => ({home});\n\nexport default connect(mapStateToProps)(Projects);\n\n\n// WEBPACK FOOTER //\n// ./app/modules/projects/containers/Projects.js","import React, {PureComponent} from 'react';\n\nexport default class Projects extends PureComponent {\n  render() {\n    // This will ensure that even if this state is not yet on the store, we'll not get\n    // an undefined value, causing exceptions when trying to access any property\n    const {home = {}} = this.props;\n\n    return (\n      <div>\n        <h1>You can see the state being filled</h1>\n        <h2>This is because new reducers are being added, and their <b>initial state</b>, being set </h2>\n        <div className=\"m-t-sm\">\n          <p>You can even get data from other already loaded states</p>\n          {home.sampleData?\n            <span>Like the data from \"home\" state: <b>{home.sampleData}</b></span> :\n            <span>Go back to the \"Home\" page and click on the button and then, come back here :)</span>\n          }\n          <p><small>Just make sure the informations of other states be always optionals to you feature</small></p>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/modules/projects/components/Projects.js","export default function projectReducer(state ={}, action) {\n  switch (action.type) {\n\n  }\n  return state;\n}\n\n\n// WEBPACK FOOTER //\n// ./app/modules/projects/reducers/projects.reducer.js"],"sourceRoot":""}